// <auto-generated />
using System;
using BEInvitacionesOnline.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BEInvitacionesOnline.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230514071250_fixTypesTemplate")]
    partial class fixTypesTemplate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BEInvitacionesOnline.Models.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateEventTwo")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("endTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("endTimeTwo")
                        .HasColumnType("time");

                    b.Property<string>("nameEight")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameFive")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameFour")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameOne")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameSeven")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameSix")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameThree")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nameTwo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("narrativeEight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeSeven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeSix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrativeTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("stratTimeTwo")
                        .HasColumnType("time");

                    b.Property<string>("urlImageEight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageSeven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageSix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urlImageTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("idInformation")
                        .HasColumnType("int");

                    b.Property<int>("idPayment")
                        .HasColumnType("int");

                    b.Property<int>("idTemplate")
                        .HasColumnType("int");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idInformation");

                    b.HasIndex("idPayment");

                    b.HasIndex("idTemplate");

                    b.HasIndex("idUser");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("expireDate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("nameCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numberCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.Profile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("perfil")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.Template", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("divContentCero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentEight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentFooter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentSeven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentSix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divContentTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divHeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idTypeTemplate")
                        .HasColumnType("int");

                    b.Property<string>("nombrePlantilla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idTypeTemplate");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.TypesTemplate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("typeTemp")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.ToTable("TypeTemplates");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("idProfile")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("id");

                    b.HasIndex("idProfile");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.Invitation", b =>
                {
                    b.HasOne("BEInvitacionesOnline.Models.Information", "Information")
                        .WithMany()
                        .HasForeignKey("idInformation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEInvitacionesOnline.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("idPayment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEInvitacionesOnline.Models.Template", "Template")
                        .WithMany()
                        .HasForeignKey("idTemplate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEInvitacionesOnline.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Information");

                    b.Navigation("Payment");

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.Template", b =>
                {
                    b.HasOne("BEInvitacionesOnline.Models.TypesTemplate", "TypeTemplate")
                        .WithMany()
                        .HasForeignKey("idTypeTemplate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeTemplate");
                });

            modelBuilder.Entity("BEInvitacionesOnline.Models.User", b =>
                {
                    b.HasOne("BEInvitacionesOnline.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("idProfile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
